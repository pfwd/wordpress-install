name: CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - 
      uses: actions/checkout@v4
    - 
      name: Copy env
      run: cp .env.dist .env
    - 
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - 
      name: Build and export
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: wordpress:latest
        outputs: type=docker,dest=/tmp/wordpress.tar
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: wordpress
        path: /tmp/wordpress.tar

  php_code_sniffer:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - 
      name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wordpress
        path: /tmp
    - 
      name: PHP Code Sniffer
      run: |
        docker load --input /tmp/wordpress.tar
        docker run wordpress composer test-phpcs

  phpstan:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - 
      name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wordpress
        path: /tmp
    - 
      name: PHPStan
      run: |
        docker load --input /tmp/wordpress.tar
        docker run wordpress composer test-stan 

  php_mess_detector:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - 
      name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wordpress
        path: /tmp
    - 
      name: PHPMessDetector
      run: |
        docker load --input /tmp/wordpress.tar
        docker run wordpress composer test-phpmd 

  phpcs_version_compatibility:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - 
      name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wordpress
        path: /tmp
    - 
      name: PHPVersionCompatibility
      run: |
        docker load --input /tmp/wordpress.tar
        docker run wordpress composer test-compatibility

  rector:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - 
      name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: wordpress
        path: /tmp
    - 
      name: Rector
      run: |
        docker load --input /tmp/wordpress.tar
        docker run wordpress composer test-rector 
